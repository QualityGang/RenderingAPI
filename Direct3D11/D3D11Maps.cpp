#include "D3D11Maps.h"

D3D11_MAP Map_MapType[] =
{
	D3D11_MAP_READ,
	D3D11_MAP_WRITE_DISCARD
};

D3D11_PRIMITIVE_TOPOLOGY Map_PrimitiveTopology[] =
{
	D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST,
	D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP,
	D3D11_PRIMITIVE_TOPOLOGY_POINTLIST
};

D3D11_FILTER Map_TextureFilter[] =
{
	D3D11_FILTER_MIN_MAG_MIP_POINT,
	D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR,
	D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,
	D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR,
	D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT,
	D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
	D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT,
	D3D11_FILTER_MIN_MAG_MIP_LINEAR,
	D3D11_FILTER_ANISOTROPIC
};

D3D11_TEXTURE_ADDRESS_MODE Map_AddressMode[] =
{
	D3D11_TEXTURE_ADDRESS_WRAP,
	D3D11_TEXTURE_ADDRESS_MIRROR,
	D3D11_TEXTURE_ADDRESS_CLAMP,
	D3D11_TEXTURE_ADDRESS_BORDER
};

DXGI_FORMAT Map_PixelFormat[] =
{
	DXGI_FORMAT_BC1_UNORM,     // DXT1
	DXGI_FORMAT_BC2_UNORM,     // DXT3
	DXGI_FORMAT_BC3_UNORM,     // DXT5
	DXGI_FORMAT_BC4_UNORM,     // LATC1/ATI1
	DXGI_FORMAT_BC5_UNORM,     // LATC2/ATI2
	DXGI_FORMAT_BC6H_TYPELESS, // BC6H
	DXGI_FORMAT_BC7_UNORM,     // BC7
	DXGI_FORMAT_UNKNOWN,       // ETC1 RGB8
	DXGI_FORMAT_UNKNOWN,       // ETC2 RGB8
	DXGI_FORMAT_UNKNOWN,       // ETC2 RGBA8
	DXGI_FORMAT_UNKNOWN,       // ETC2 RGB8A1
	DXGI_FORMAT_UNKNOWN,       // PVRTC1 RGB 2BPP
	DXGI_FORMAT_UNKNOWN,       // PVRTC1 RGB 4BPP
	DXGI_FORMAT_UNKNOWN,       // PVRTC1 RGBA 2BPP
	DXGI_FORMAT_UNKNOWN,       // PVRTC1 RGBA 4BPP
	DXGI_FORMAT_UNKNOWN,       // PVRTC2 RGBA 2BPP
	DXGI_FORMAT_UNKNOWN,       // PVRTC2 RGBA 4BPP

	DXGI_FORMAT_UNKNOWN,       // compressed formats above

	DXGI_FORMAT_R1_UNORM,
	DXGI_FORMAT_R8_UNORM,
	DXGI_FORMAT_R16_UNORM,
	DXGI_FORMAT_R16_FLOAT,
	DXGI_FORMAT_R32_SINT,
	DXGI_FORMAT_R32_UINT,
	DXGI_FORMAT_R32_FLOAT,
	DXGI_FORMAT_R8G8_UNORM,
	DXGI_FORMAT_R16G16_UNORM,
	DXGI_FORMAT_R16G16_FLOAT,
	DXGI_FORMAT_R32G32_SINT,
	DXGI_FORMAT_R32G32_UINT,
	DXGI_FORMAT_R32G32_FLOAT,
	DXGI_FORMAT_R32G32B32_SINT,
	DXGI_FORMAT_R32G32B32_UINT,
	DXGI_FORMAT_R32G32B32_FLOAT,
	DXGI_FORMAT_R8G8B8A8_UNORM,
	DXGI_FORMAT_R16G16B16A16_UNORM,
	DXGI_FORMAT_R16G16B16A16_FLOAT,
	DXGI_FORMAT_R32G32B32A32_SINT,
	DXGI_FORMAT_R32G32B32A32_UINT,
	DXGI_FORMAT_R32G32B32A32_FLOAT,
	DXGI_FORMAT_R11G11B10_FLOAT,

	DXGI_FORMAT_UNKNOWN, // depth formats below

	DXGI_FORMAT_D16_UNORM,
	DXGI_FORMAT_D24_UNORM_S8_UINT,
	DXGI_FORMAT_D32_FLOAT
};

D3D11_FILL_MODE Map_FillMode[] =
{
	D3D11_FILL_SOLID,
	D3D11_FILL_WIREFRAME
};

D3D11_CULL_MODE Map_CullMode[] =
{
	D3D11_CULL_BACK,
	D3D11_CULL_FRONT,
	D3D11_CULL_NONE
};

BOOL Map_VertexOrder[] =
{
	FALSE,
	TRUE
};

D3D11_BLEND Map_BlendFactor[] =
{
	D3D11_BLEND_ZERO,
	D3D11_BLEND_ONE,
	D3D11_BLEND_SRC_ALPHA,
	D3D11_BLEND_DEST_ALPHA,
	D3D11_BLEND_INV_SRC_ALPHA,
	D3D11_BLEND_INV_DEST_ALPHA,
	D3D11_BLEND_SRC_COLOR,
	D3D11_BLEND_DEST_COLOR,
	D3D11_BLEND_INV_SRC_COLOR,
	D3D11_BLEND_INV_DEST_COLOR
};

D3D11_BLEND_OP Map_BlendOp[] =
{
	D3D11_BLEND_OP_ADD,
	D3D11_BLEND_OP_SUBTRACT,
	D3D11_BLEND_OP_REV_SUBTRACT,
	D3D11_BLEND_OP_MIN,
	D3D11_BLEND_OP_MAX
};

// ColorWriteMask values in d3d11 are identical
//UINT Map_ColorWriteMask[] = 
//{
//	D3D11_COLOR_WRITE_ENABLE_RED,
//	D3D11_COLOR_WRITE_ENABLE_GREEN,
//	D3D11_COLOR_WRITE_ENABLE_BLUE,
//	D3D11_COLOR_WRITE_ENABLE_ALL
//};

D3D11_DEPTH_WRITE_MASK Map_DepthWriteMask[] =
{
	D3D11_DEPTH_WRITE_MASK_ZERO,
	D3D11_DEPTH_WRITE_MASK_ALL
};

D3D11_COMPARISON_FUNC Map_ComparisonFunc[] =
{
	D3D11_COMPARISON_ALWAYS,
	D3D11_COMPARISON_NEVER,
	D3D11_COMPARISON_LESS,
	D3D11_COMPARISON_LESS_EQUAL,
	D3D11_COMPARISON_GREATER,
	D3D11_COMPARISON_GREATER_EQUAL,
	D3D11_COMPARISON_EQUAL,
	D3D11_COMPARISON_NOT_EQUAL
};

D3D11_STENCIL_OP Map_StencilOp[] =
{
	D3D11_STENCIL_OP_KEEP,
	D3D11_STENCIL_OP_ZERO,
	D3D11_STENCIL_OP_REPLACE,
	D3D11_STENCIL_OP_INCR,
	D3D11_STENCIL_OP_DECR
};

D3D11_INPUT_CLASSIFICATION Map_InputDataType[] =
{
	D3D11_INPUT_PER_VERTEX_DATA,
	D3D11_INPUT_PER_INSTANCE_DATA
};

D3D11_BIND_FLAG Map_BufferType[] =
{
	D3D11_BIND_VERTEX_BUFFER,
	D3D11_BIND_INDEX_BUFFER,
	D3D11_BIND_CONSTANT_BUFFER
};
